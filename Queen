def display(board):
    n=len(board)
    for i in range(n):
        print(board[i])
def safe(board,row,col,n):
    for i in range(n):
        if board[i][col]==1:
            return False
        if board[row][i]==1:
            return False    
    for k in range(1,row+1):
        if row-k>=0 and col-k>=0 and board[row-k][col-k]==1:
            return False
        if row-k>=0 and col+k<n and board[row-k][col+k]==1:
            return False
    for k in range(1,n-row):
        if row+k<n and col-k>=0 and board[row+k][col-k]==1:
            return False
        if row+k<n and col+k<n and board[row+k][col+k]==1:
            return False
    return True

def queen(board,row,pre,n):
    if row==n:
        display(board)
        return True
    if row==pre:
        return queen(board,row+1,pre,n)
    for col in range(n):
        if safe(board,row,col,n):
            board[row][col]=1
            if queen(board,row+1,pre,n):
                return True
            board[row][col]=0
    return False

n=int(input("SIze"))
b=[[0 for i in range(n)] for j in range(n)]

r=int(input())
c=int(input())
b[r][c]=1

if not queen(b,0,r,n):
    print("No sol")



        
    
    
            
